{"version":3,"sources":["util/db.ts","util/util.ts","gallery/PhotoPreview.tsx","gallery/PhotoFocus.tsx","util/url.ts","gallery/KeyboardListener.ts","gallery/Gallery.tsx","navbar/Search.tsx","navbar/Sorter.tsx","navbar/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Database","data","photoSort","sorted","arr","cb","concat","sort","a","b","compare","sortBy","this","photos","reverse","terms","orderBy","get","filter","p","some","t","description","toLowerCase","includes","fetch","resp","json","PhotoPreview","props","hiRes","photo","image","className","style","backgroundImage","onClick","focusPhoto","date","PhotoFocus","onExit","UrlManager","hash","window","location","split","pop","console","log","history","pushState","KEYBOARD","document","addEventListener","evt","onKeyDown","getRecords","searchTerms","length","db","search","Gallery","hasReadHash","useRef","useState","focused","setFocused","updateFocused","setUrl","useEffect","current","readUrl","match","setCallback","records","code","elm","matcher","matchingElm","e","undefined","index","indexOf","getPrevInArray","getNextInArray","map","i","Search","searchRaw","setSearchRaw","placeholder","value","onChange","raw","target","setSearchTerms","trim","s","DefaultSortBy","label","added","SortOptions","Math","random","findIndex","opt","Sorter","newLabel","sorter","setSortBy","Navbar","App","setDb","load","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49936434.chunk.js","sourcesContent":["import { Data, Photo, PhotoSort } from \"./types\";\nimport { sortBy } from \"./util\";\n\nexport class Database {\n  private constructor(\n    private readonly data: Data) { }\n\n  get(photoSort: PhotoSort): Photo[] {\n    const sorted = sortBy(this.data.photos, photoSort.sortBy);\n    return photoSort.reverse ? sorted.reverse() : sorted;\n  }\n\n  search(terms: string[], orderBy: PhotoSort) {\n    return this.get(orderBy).filter(p => terms.some(t =>\n      p.description.toLowerCase().includes(t.toLowerCase())\n    ));\n  }\n\n  static async load() {\n    const resp = await fetch('data.json');\n    const json = await resp.json() as Data;\n    return new Database(json);\n  }\n}\n","\ntype Comparable = string | number | Date;\n\nfunction compare<T extends Comparable>(a: T, b: T) {\n  if (a < b) { return -1; }\n  if (a > b) { return 1; }\n  return 0;\n}\n\nexport function sortBy<T, V extends Comparable>(arr: T[], cb: ((obj: T) => V)): T[] {\n  const sorted = arr.concat();\n  sorted.sort((a, b) => compare(cb(a), cb(b)));\n  return sorted;\n}\n\nexport function getPrevInArray<T>(elm: T, arr: T[], matcher?: (a: T, b: T) => boolean): T {\n  const matchingElm = matcher ? arr.filter(e => matcher(e, elm))[0] : undefined;\n  const index = arr.indexOf(matchingElm ?? elm);\n  const newIndex = (arr.length + index - 1) % arr.length;\n  return arr[newIndex];\n}\n\nexport function getNextInArray<T>(elm: T, arr: T[], matcher?: (a: T, b: T) => boolean): T {\n  const matchingElm = matcher ? arr.filter(e => matcher(e, elm))[0] : undefined;\n  const index = arr.indexOf(matchingElm ?? elm);\n  const newIndex = (arr.length + index + 1) % arr.length;\n  return arr[newIndex];\n}\n","import React from \"react\";\nimport { Photo } from \"../util/types\";\nimport './PhotoPreview.css';\n\ninterface PhotoPreviewProps {\n  photo: Photo;\n  focusPhoto(photo: Photo): void;\n}\n\nexport function PhotoPreview(props: PhotoPreviewProps) {\n  const hiRes = `images/${props.photo.image}`;\n  return (\n    <div\n      className=\"PhotoPreview\"\n      style={{backgroundImage: `url(${hiRes})`}}\n      onClick={() => props.focusPhoto(props.photo)}\n    >\n      <div className=\"PhotoPreviewDate\">{props.photo.date}</div>\n    </div>\n  )\n}\n","import { Photo } from \"../util/types\";\nimport './PhotoFocus.css';\n\ninterface PhotoFocusProps {\n  photo: Photo;\n  onExit(): void;\n}\n\nexport function PhotoFocus(props: PhotoFocusProps) {\n  const hiRes = `images/${props.photo.image}`;\n  return (\n    <div className=\"PhotoFocus\" onClick={props.onExit}>\n      <div\n        className=\"PhotoFocusImage\"\n        style={{ backgroundImage: `url(${hiRes})` }}\n      >\n        &nbsp;\n      </div>\n      <div className=\"PhotoFocusDescription\">{props.photo.description}</div>\n    </div>\n  )\n}\n","import { Photo } from \"./types\";\n\nexport class UrlManager {\n  readUrl(): string | undefined {\n    const hash = window.location.hash.split('#').pop();\n    console.log('hash', hash);\n    return hash;\n  }\n  setUrl(photo?: Photo): void {\n    const hash = `#${photo?.image ?? ''}`;\n    if (window.history.pushState) {\n      window.history.pushState(null, '', hash);\n    }\n    else {\n      window.location.hash = hash;\n    }\n  }\n}\n","export type KeyboardCallback = (evt: KeyboardEvent) => void;\n\nclass _KeyboardListenerSingleton {\n  private cb: KeyboardCallback = () => { };\n\n  constructor() {\n    document.addEventListener('keydown', evt => this.onKeyDown(evt));\n  }\n  private onKeyDown(evt: KeyboardEvent) {\n    this.cb(evt);\n  }\n\n  setCallback(cb: KeyboardCallback) {\n    this.cb = cb;\n  }\n}\n\nexport const KEYBOARD = new _KeyboardListenerSingleton();\n","import { useEffect, useRef, useState } from \"react\";\nimport { Database } from \"../util/db\";\nimport { PhotoPreview } from \"./PhotoPreview\";\nimport { Photo, PhotoSort } from \"../util/types\";\nimport './Gallery.css';\nimport { PhotoFocus } from \"./PhotoFocus\";\nimport { getNextInArray, getPrevInArray } from \"../util/util\";\nimport { UrlManager } from \"../util/url\";\nimport { KEYBOARD } from \"./KeyboardListener\";\n\ninterface GalleryProps {\n  db: Database;\n  searchTerms: string[];\n  sortBy: PhotoSort;\n}\n\nfunction getRecords(props: GalleryProps): Photo[] {\n  return props.searchTerms.length\n    ? props.db.search(props.searchTerms, props.sortBy)\n    : props.db.get(props.sortBy);\n}\n\nexport function Gallery(props: GalleryProps) {\n  const hasReadHash = useRef(false);\n  const [focused, setFocused] = useState<Photo>();\n\n  useEffect(() => {\n    if (hasReadHash.current) { return; }\n\n    const hash = new UrlManager().readUrl();\n    if (hash) {\n      const match = getRecords(props).filter(p => p.image === hash)[0];\n      console.log(hash, match);\n      updateFocused(match);\n    }\n\n    hasReadHash.current = true;\n  }, [props]);\n\n  function updateFocused(photo: Photo | undefined) {\n    setFocused(photo);\n    new UrlManager().setUrl(photo);\n  }\n  KEYBOARD.setCallback(evt => {\n    const records = getRecords(props);\n    if (evt.code === 'ArrowLeft') {\n      updateFocused(getPrevInArray(focused, records));\n    }\n    if (evt.code === 'ArrowRight') {\n      updateFocused(getNextInArray(focused, records));\n    }\n    if (evt.code === 'Escape') {\n      updateFocused(undefined);\n    }\n  });\n\n  const records = getRecords(props);\n  return (\n    <div className=\"GalleryContainer\">\n      {records.map((p, i) => (\n        <PhotoPreview\n          key={i}\n          photo={p}\n          focusPhoto={p => setFocused(p)}\n        />\n      ))}\n      {focused && (\n        <PhotoFocus\n          photo={focused}\n          onExit={() => setFocused(undefined)}\n        />\n      )}\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport './Search.css';\n\ninterface SearchProps {\n  setSearchTerms(terms: string[]): void;\n}\n\nexport function Search(props: SearchProps) {\n  const [searchRaw, setSearchRaw] = useState<string>('');\n\n  function parseSearchTerms(raw: string) {\n    setSearchRaw(raw);\n    props.setSearchTerms(raw.trim().split(' ').map(s => s.trim()).filter(s => !!s));\n  }\n\n  return (\n    <input\n      className=\"Search\"\n      placeholder=\"Type here to search\"\n      value={searchRaw}\n      onChange={evt => parseSearchTerms(evt.target.value)}\n    />\n  )\n}\n","import React from \"react\";\nimport { PhotoSort } from \"../util/types\";\nimport './Sorter.css';\n\ninterface SorterProps {\n  sortBy: PhotoSort;\n  setSortBy(sorter: PhotoSort): void;\n}\n\nexport const DefaultSortBy: PhotoSort = {\n  label: 'Recently Added',\n  sortBy: p => p.added,\n  reverse: true,\n};\nconst SortOptions: PhotoSort[] = [\n  DefaultSortBy, {\n    label: 'Date Ascending',\n    sortBy: p => p.date,\n    reverse: false,\n  }, {\n    label: 'Date Descending',\n    sortBy: p => p.date,\n    reverse: true,\n  }, {\n    label: 'Shuffle',\n    sortBy: p => Math.random(),\n    reverse: false,\n  },\n];\nfunction indexOf(label: string): number {\n  return SortOptions.findIndex(opt =>\n    opt.label === label\n  );\n}\n\nexport function Sorter(props: SorterProps) {\n  function onChange(newLabel: string) {\n    const index = indexOf(newLabel);\n    const sorter = SortOptions[index];\n    props.setSortBy(sorter);\n  }\n\n  const current = SortOptions[indexOf(props.sortBy.label)];\n\n  return (\n    <select className=\"Sorter\" onChange={evt => onChange(evt.target.value)} value={current.label}>\n      {SortOptions.map(opt => (\n        <option\n          key={opt.label}\n          label={opt.label}\n          value={opt.label}\n        />\n      ))}\n    </select>\n  )\n}\n","import React from 'react';\nimport './Navbar.css';\nimport { Search } from './Search';\nimport { Sorter } from './Sorter';\nimport { PhotoSort } from '../util/types';\n\ninterface NavbarProps {\n  setSearchTerms(value: string[]): void;\n  sortBy: PhotoSort;\n  setSortBy(value: PhotoSort): void;\n}\n\nexport function Navbar(props: NavbarProps) {\n  return (\n    <header className=\"Navbar\">\n      <h1>\n        Rockland Fan Site\n      </h1>\n      <Sorter sortBy={props.sortBy} setSortBy={props.setSortBy} />\n      <Search setSearchTerms={props.setSearchTerms} />\n    </header>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Database } from './util/db';\nimport { Gallery } from './gallery';\nimport { DefaultSortBy, Navbar } from './navbar';\nimport { PhotoSort } from './util/types';\n\nexport function App() {\n  const [db, setDb] = useState<Database>();\n  const [searchTerms, setSearchTerms] = useState<string[]>([]);\n  const [sortBy, setSortBy] = useState<PhotoSort>(DefaultSortBy);\n\n  useEffect(() => {\n    (async () => {\n      const db = await Database.load();\n      console.log(db);\n      setDb(db);\n    })();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        setSearchTerms={setSearchTerms}\n        sortBy={sortBy}\n        setSortBy={setSortBy}\n      />\n      {db ? (\n        <Gallery db={db} searchTerms={searchTerms} sortBy={sortBy} />\n      ) : (\n        <div className='AppLoading'>loading...</div>\n      )}\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}